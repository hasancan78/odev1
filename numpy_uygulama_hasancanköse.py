# -*- coding: utf-8 -*-
"""numpy-uygulama-hasancanköse.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qMqr8Zfto45nzudDxHZQK1pa7QrySpQa
"""

# Soru 1
# NumPy Getting Started
import numpy as np  # NumPy kütüphanesini dahil ediyoruz.

arr = np.arange(1, 10)  # 1'den 9'a kadar olan sayılardan oluşan bir dizi oluşturuyor.

print(arr)  # Diziyi ekrana yazdırıyoruz.

# Soru 2
# NumPy Creating Arrays
import numpy as np  # NumPy kutuphanesini dahil ediyoruz.

sifirlar_dizisi = np.zeros(5)  # 5 elemandan olusan sifirlarla bir dizi olusturuyoruz.
print("Sıfırlarla oluşan dizi:", sifirlar_dizisi)

birler_matrisi = np.ones((3, 3))  # 3x3 boyutunda birler matrisi olusturuyoruz.
print("\nBirler matrisi:\n", birler_matrisi)

aralik_dizisi = np.arange(10, 21)  # 10'dan 20'ye kadar artan bir dizi olusturuyoruz.
print("\n10 ile 20 arasinda artan dizi:", aralik_dizisi)

# Soru 3
# NumPy Array Indexing
import numpy as np  # NumPy kütüphanesini dahil ediyoruz.

arr = np.array([[5, 10, 15], [20, 25, 30], [35, 40, 45]]) # 3x3 boyutunda bir dizi oluşturuyoruz.

print(arr[1][2])  # 1. satır, 2. sütundaki değeri (30) yazdırıyoruz.

# Soru 4
# NumPy Array Slicing
import numpy as np  # NumPy kütüphanesini dahil ediyoruz.

arr = np.array([[5, 10, 15], [20, 25, 30], [35, 40, 45]]) # 3x3 boyutunda bir dizi oluşturuyoruz.

alt_dizi = arr[:, :2]  # Tüm satırlardan, ilk iki sütunu seçiyoruz.

print(alt_dizi)  # Seçilen alt diziyi yazdırıyoruz.

# Soru 5
# NumPy Data Types
import numpy as np  # NumPy kütüphanesini dahil ediyoruz.

arr = np.array([1, 2, 3])  # Sayılardan oluşan bir dizi oluşturuyoruz.

print("Dizinin veri tipi (dtype):", arr.dtype)  # Dizinin veri tipini yazdırıyoruz.

arr_float = arr.astype(float)  # Diziyi float tipine dönüştürüyoruz.
print("Dönüştürülmüş dizi:", arr_float)  # Dönüştürülmüş diziyi yazdırıyoruz.
print("Dönüştürülmüş dizinin veri tipi (dtype):", arr_float.dtype)  # Dönüştürülmüş dizinin veri tipini yazdırıyoruz.

# Soru 6
# NumPy Copy vs View
import numpy as np  # NumPy kütüphanesini dahil ediyoruz.

dizi = np.array([1, 2, 3, 4, 5])  # Bir dizi oluşturuyoruz.

kopya_dizi = dizi.copy()  # Dizinin kopyasını oluşturuyoruz.
gorunum_dizi = dizi.view()  # Dizinin görünümünü (view) oluşturuyoruz.

# Kopya dizideki ilk elemanı değiştiriyoruz, orijinal dizi etkilenmez.
kopya_dizi[0] = 99
print("Kopya dizi (kopya_dizi):", kopya_dizi)
print("Orijinal dizi (dizi) kopya sonrası:", dizi)

# Görünüm dizisinde ilk elemanı değiştiriyoruz, orijinal dizi de etkilenir.
gorunum_dizi[0] = 77
print("Görünüm dizi (gorunum_dizi):", gorunum_dizi)
print("Orijinal dizi (dizi) görünüm sonrası:", dizi)

# Soru 7
# NumPy Array Shape
import numpy as np  # NumPy kütüphanesini dahil ediyoruz.

dizi = np.array([[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12]])
# 3 satır ve 4 sütündan oluşan bir dizi oluşturuyoruz.

print("Dizinin boyutlari (shape):", dizi.shape)  # Dizinin boyutlarını yazdırıyoruz.

# Soru 8
# NumPy Array Reshape
import numpy as np  # NumPy kütüphanesini dahil ediyoruz.

dizi = np.arange(1, 13)  # 1'den 12'ye kadar olan sayılardan oluşan bir dizi oluşturuyoruz.

yeni_dizi = dizi.reshape(3, 4)  # Dizi'yi 3x4 boyutunda bir matrise yeniden şekillendiriyoruz.

print("Yeni şekillendirilmiş dizi:\n", yeni_dizi)  # Yeni şekillendirilmiş diziyi yazdırıyoruz.

# Soru 9
# NumPy Array Iterating
import numpy as np  # NumPy kütüphanesini dahil ediyoruz.

dizi = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]])  # 2 boyutlu bir dizi oluşturuyoruz.

for satir in dizi:  # Her bir satır üzerinde döngü kuruyoruz.
    print(satir)  # Satırdaki elemanları yazdırıyoruz.

# Soru 10
# NumPy Array Join
import numpy as np  # NumPy kütüphanesini dahil ediyoruz.

# İki adet 2x2 boyutunda NumPy dizisi oluşturuyoruz.
dizi_a = np.array([[1, 2], [3, 4]])
dizi_b = np.array([[5, 6], [7, 8]])

# Dikey birleştirme (axis=0) ile dizilerin satırlarını birleştiriyoruz.
dikey_birlesim = np.concatenate((dizi_a, dizi_b), axis=0)
print("Dikey birleştirilmiş dizi (axis=0):\n", dikey_birlesim)

# Yatay birleştirme (axis=1) ile dizilerin sütunlarını birleştiriyoruz.
yatay_birlesim = np.concatenate((dizi_a, dizi_b), axis=1)
print("\nYatay birleştirilmiş dizi (axis=1):\n", yatay_birlesim)

# Soru 11
# NumPy Array Split
import numpy as np  # NumPy kütüphanesini dahil ediyoruz.

# 1'den 12'ye kadar olan bir dizi oluşturuyoruz.
dizi = np.arange(1, 13)

# Dizi'yi 3 eşit parçaya bölüyoruz.
parcalar = np.array_split(dizi, 3)

# Her bir parçayı yazdırıyoruz.
print("Dizi'nin 3 parçaya bölünmüş hali:")
for i, parca in enumerate(parcalar, start=1):
    print(f"Parça {i}: {parca}")

# Soru 12
# NumPy Array Search
import numpy as np  # NumPy kütüphanesini dahil ediyoruz.

# Bir dizi oluşturuyoruz.
dizi = np.array([10, 15, 20, 25, 30])

# 25 değerinin dizideki indeksini buluyoruz.
indeks = np.where(dizi == 25)

# 25'in bulunduğu indeksin konumunu yazdırıyoruz.
print("25 değeri dizinin indeksinde:", indeks[0][0])

# Soru 13
# NumPy Array Sort
import numpy as np  # NumPy kütüphanesini dahil ediyoruz.

# Bir dizi oluşturuyoruz.
dizi = np.array([42, 17, 8, 99, 23])

# Diziyi küçükten büyüğe sıralıyoruz.
sirali_dizi = np.sort(dizi)

# Sıralanmış diziyi yazdırıyoruz.
print("Sıralanmış dizi:", sirali_dizi)

# Soru 14
# NumPy Array Filter
import numpy as np  # NumPy kütüphanesini dahil ediyoruz.

# Bir dizi oluşturuyoruz.
dizi = np.array([1, 2, 3, 4, 5, 6])

# Çift sayıları filtreliyoruz.
cift_sayilar = dizi[dizi % 2 == 0]

# Çift sayıları yazdırıyoruz.
print("Çift sayılar:", cift_sayilar)
